buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.0.0"
    }
}

plugins {
    id 'maven-publish'
}

apply plugin: 'com.android.library'

group 'dev.weaponboy.nexus_pathing'
version = 'v0.0.0'

android {
    namespace 'dev.weaponboy.nexus_pathing'

    compileSdkVersion 33

    lintOptions {
        disable 'ExpiredTargetSdkVersion'
    }

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName 'v0.0.0'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.jetbrains:annotations:24.0.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    testImplementation 'org.tomlj:tomlj:1.1.0'

    compileOnly 'org.firstinspires.ftc:RobotCore:9.0.0'
    compileOnly 'org.firstinspires.ftc:RobotServer:9.0.0'
    compileOnly 'org.firstinspires.ftc:Hardware:9.0.0'
    compileOnly 'org.firstinspires.ftc:FtcCommon:9.0.0'
    compileOnly 'org.firstinspires.ftc:Vision:9.0.0'
    compileOnly 'androidx.appcompat:appcompat:1.6.1'

    implementation 'org.tomlj:tomlj:1.1.0'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.Weaponboy'
                artifactId = 'Nexus_pathing'
                version = 'v0.0.0'

                // Include the AAR artifact
                artifact("$buildDir/outputs/aar/${project.name}-release.aar")

                pom {
                    name = 'Nexus_pathing'
                    description = 'Description of your library'
                    url = 'http://www.example.com'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'Weaponboy'
                            name = 'Josh Anderson'
                            email = 'joshandy06@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/Weaponboy/Nexus.git'
                        developerConnection = 'scm:git:ssh://github.com:Weaponboy/Nexus.git'
                        url = 'http://github.com/Weaponboy/Nexus/'
                    }
                }
            }
        }
        repositories {
            maven {
                name = 'Nexus'
                url = "${project.buildDir}/release"
            }
        }
    }

    tasks.named("publishReleasePublicationToMavenLocal") {
        dependsOn tasks.named("assembleRelease")
    }
}
